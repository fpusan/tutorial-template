*************************************
Explanation of SqueezeMeta algorithms
*************************************

.. _lca:
The LCA algorithm
=================

.. _euk annot:
Taxonomic annotation of eukaryotic ORFs
---------------------------------------
By default, SqueezeMeta applies `Luo et al. (2014) <https://pmc.ncbi.nlm.nih.gov/articles/PMC4005636/>`_ identity cutoffs in order to assign an ORF to a given taxonomic rank (see :ref:`lca`). In our tests, these cutoffs resulted in a very low percentage of annotation for eukaryotic ORFs.

The treatment of these ORFs differs depending on how :doc:`SqueezeMeta.pl <execution>`, :ref:`sqm_reads.pl <sqm_reads>` or :ref:`sqm_longreads.pl <sqm_longreads>` are launched, and the result files that are used afterwards.

- The raw results produced by :doc:`SqueezeMeta.pl <execution>`,  :ref:`sqm_reads.pl <sqm_reads>` and :ref:`sqm_longreads.pl <sqm_longreads>` will apply identity cutoffs to all taxa by default unless the flag ``--euk`` is passed when running the script, in which case the identity cutoffs will only be applied to eukaryotic reads.

    - An exception to this is the final step of the *SqueezeMeta* pipeline, which runs :ref:`sqm2tables.py <sqm2tables>` with default parameters, see :ref:`_sqm2tables in pipeline`. In that step, both types of results will be produced regardless of whether the ``--euk`` flag is passed or not, see below.

- When creating taxonomic aggregate tables with :ref:`sqm2tables.py <sqm2tables>` (for projects created with *SqueezeMeta.pl*) and :ref:`sqmreads2tables.py <sqmreads2tables>` (for projects created with :ref:`sqm_reads.pl <sqm_reads>` and :ref:`sqm_longreads.pl <sqm_longreads>`) three sets of results will be generated **regardless of whether the --euk flag was passed when running the script**.
  
    - *allfilter* files, containing ORF, contig and aggregate taxonomies obtained after applying identity filters to ALL taxa.
    - *prokfilter* files, containing ORF, contig and aggregate taxonomies obtained after applying identity filters to prokaryotic taxa only. This would replicate the behaviour of ``--euk`` flag.
    - *nofilter* files, containing ORF, contig and aggregate taxonomies obtained after applying NO identity filters at all.
  
  The advantage of this method is that there is no need to repeat the whole run to change the behaviour of identity cutoffs.

- When using :doc:`SQMtools` to analyze your data, you get to choose the behaviour of identity cutoffs (*allfilter*, *prokfilter*, *nofilter*) through the ``tax_mode`` parameter in the ``loadSQM`` and ``loadSQMlite`` functions (with the default being ``"prokfilter"``, i.e. using identity cutoffs for prokaryotes but not eukaryotes).

Handling of unclassified and missing ranks in NCBI taxonomy
-----------------------------------------------------------
.. note::
   The discussion below applies only to the results generated by :ref:`sqm2tables.py <sqm2tables>` (which it itself ran as the final step of the SqueezeMeta pipeline, see :ref:`_sqm2tables in pipeline`) and :ref:`sqmreads2tables.py <sqmreads2tables>`, and also when loading projects in R with :doc:`SQMtools`. Other SqueezeMeta scripts will not correct for this and report taxonomies directly as received from NCBI. 

SqueezeMeta uses NCBI's nr database for taxonomic annotation, and reports the superkingdom, phylum, class, order, family, genus and species ranks. In some cases, the NCBI taxonomy is missing some intermediate ranks. For example, the NCBI taxonomy for the order *Trichomonadida* is:

- superkingdom: *Eukaryota*
- no rank: *Parabasalia*
- order: *Trichomonadida*

NCBI does not assign Trichomonadida to any taxa in the class and phylum ranks. For clarity, :ref:`sqm2tables.py <sqm2tables>` and :ref:`sqmreads2tables.py <sqmreads2tables>` will indicate this by recycling the highest available taxonomy and adding the ``"(no <rank> in NCBI)"`` string after it. The scripts will also recycle the highest available taxonomy and use it to populate lower level taxonomic ranks, by adding the ``"Unclassified"`` string before it.

For example, ORFs that can be classified down to the *Trichomonadida* order (which itself lacks class and phylum classifications in NCBI) and that could not be classified at the family level or below will be reported as:

- superkingdom: *Eukaryota*
- phylum: *Trichomonadida (no phylum in NCBI)*
- class: *Trichomonadida (no class in NCBI)*
- order: *Trichomonadida*
- family: *Unclassified Trichomonadida*
- genus: *Unclassified Trichomonadida*
- species: *Unclassified Trichomonadida*

.. _nocds:
Meaning of "Unmapped", "Unclassified" and "No CDS" in taxonomy results
----------------------------------------------------------------------
.. note::                                                                                                                               The discussion below applies only to the results generated by :ref:`sqm2tables.py <sqm2tables>` (which it itself ran as the final step of the SqueezeMeta pipeline, see :ref:`_sqm2tables in pipeline`) and :ref:`sqmreads2tables.py <sqmreads2tables>`, and also when loading projects in R with :doc:`SQMtools`.

The "Unclassified" category represents only the features that were classifiable with our method (i.e. contained a protein-coding sequence) but were not actually classified (because they did not have good enough hits to the reference database).

In addition to the normal taxon names and the “Unclassified” category, the results will contain 2 extra categories:

- ``"Unmapped"``: reads not mapping to any contigs.
- ``"No CDS"``: features (or reads mapping to features) that contained no protein-coding sequences (e.g. rRNAs).


.. _consensus tax:
Consensus taxonomic annotation for contigs and bins
===================================================

.. _fun3:
The fun3 algorithm
==================

.. _partial fun counts:
Partial counts for functions in aggregated tables
-------------------------------------------------
.. note::                                                                                                                               The discussion below applies only to the results generated by :ref:`sqm2tables.py <sqm2tables>` (which it itself ran as the final step of the SqueezeMeta pipeline, see :ref:`_sqm2tables in pipeline`) and :ref:`sqmreads2tables.py <sqmreads2tables>`, and also when loading projects in R with :doc:`SQMtools`.

Some ORFs will have multiple KEGG/COG annotations in the :ref:`ORF table <ORF table>`. This is due to their best hit in the KEGG/COG databases actually being annotated with more than one function. The script will split the abundances of those ORFs between the different functions they have been assigned to, which will preserve the total number of reads in the table, but will lead to fractional counts in some cases. If using those tables with methods that expect integer counts, you can just round them as the error will be minimal. 

.. _doublepass:
Doublepass: blastx on contig gaps
=================================

.. _disparity:
Disparity calculation
=====================
